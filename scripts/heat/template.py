left_net_template = {u'outputs': {u'left_net_name': {u'description': u'Name of the left network', u'value': {u'get_attr': [u'left_net', u'name']}}, u'left_net_id': {u'description': u'ID of the left network', u'value': {u'get_attr': [u'left_net', u'show', u'id']}}, u'left_net_cidr': {u'description': u'CIDR of the left network', u'value': {u'get_attr': [u'left_subnet', u'cidr']}}}, u'heat_template_version': u'2013-05-23', u'description': u'HOT template to create left network in a service chain. \n', u'parameters': {u'left_net_gateway': {u'type': u'string', u'description': u'Private network gateway address'}, u'left_net_name': {u'type': u'string', u'description': u'Name of private network to be created'}, u'left_net_pool_end': {
    u'type': u'string', u'description': u'End of private network IP address allocation pool'}, u'left_net_pool_start': {u'type': u'string', u'description': u'Start of private network IP address allocation pool'}, u'left_net_cidr': {u'type': u'string', u'description': u'Private network address (CIDR notation)'}}, u'resources': {u'left_subnet': {u'type': u'OS::Neutron::Subnet', u'properties': {u'network_id': {u'get_resource': u'left_net'}, u'cidr': {u'get_param': u'left_net_cidr'}, u'gateway_ip': {u'get_param': u'left_net_gateway'}, u'allocation_pools': [{u'start': {u'get_param': u'left_net_pool_start'}, u'end': {u'get_param': u'left_net_pool_end'}}]}}, u'left_net': {u'type': u'OS::Neutron::Net', u'properties': {u'name': {u'get_param': u'left_net_name'}}}}}

right_net_template = {u'outputs': {u'right_net_id': {u'description': u'ID of the right network', u'value': {u'get_attr': [u'right_net', u'show', u'id']}}, u'right_net_name': {u'description': u'Name of the right network', u'value': {u'get_attr': [u'right_net', u'name']}}, u'right_net_cidr': {u'description': u'CIDR of the right network', u'value': {u'get_attr': [u'right_subnet', u'cidr']}}}, u'heat_template_version': u'2013-05-23', u'description': u'HOT template to create right network in a service chain. \n', u'parameters': {u'right_net_name': {u'type': u'string', u'description': u'Name of private network to be created'}, u'right_net_pool_end': {u'type': u'string', u'description': u'End of private network IP address allocation pool'}, u'right_net_gateway': {
    u'type': u'string', u'description': u'Private network gateway address'}, u'right_net_cidr': {u'type': u'string', u'description': u'Private network address (CIDR notation)'}, u'right_net_pool_start': {u'type': u'string', u'description': u'Start of private network IP address allocation pool'}}, u'resources': {u'right_subnet': {u'type': u'OS::Neutron::Subnet', u'properties': {u'network_id': {u'get_resource': u'right_net'}, u'cidr': {u'get_param': u'right_net_cidr'}, u'gateway_ip': {u'get_param': u'right_net_gateway'}, u'allocation_pools': [{u'start': {u'get_param': u'right_net_pool_start'}, u'end': {u'get_param': u'right_net_pool_end'}}]}}, u'right_net': {u'type': u'OS::Neutron::Net', u'properties': {u'name': {u'get_param': u'right_net_name'}}}}}

end_vms_template = {u'outputs': {u'server1_ip': {u'description': u'IP address of the left_vm', u'value': {u'get_attr': [u'server1', u'first_address']}}, u'server2_ip': {u'description': u'IP address of the right_vm', u'value': {u'get_attr': [u'server2', u'first_address']}}}, u'heat_template_version': u'2013-05-23', u'description': u'HOT template to deploy server into an existing neutron tenant network\n', u'parameters': {u'right_net_id': {u'type': u'string', u'description': u'ID of the right network'}, u'left_net_id': {u'type': u'string', u'description': u'ID of the left network'}, u'image': {u'type': u'string', u'description': u'Name of image to use for servers'}, u'flavor': {
    u'type': u'string', u'description': u'Flavor to use for servers'}}, u'resources': {u'server1_port': {u'type': u'OS::Neutron::Port', u'properties': {u'network_id': {u'get_param': u'left_net_id'}}}, u'server2_port': {u'type': u'OS::Neutron::Port', u'properties': {u'network_id': {u'get_param': u'right_net_id'}}}, u'server1': {u'type': u'OS::Nova::Server', u'properties': {u'image': {u'get_param': u'image'}, u'name': u'left_vm', u'flavor': {u'get_param': u'flavor'}, u'networks': [{u'port': {u'get_resource': u'server1_port'}}]}}, u'server2': {u'type': u'OS::Nova::Server', u'properties': {u'image': {u'get_param': u'image'}, u'name': u'right_vm', u'flavor': {u'get_param': u'flavor'}, u'networks': [{u'port': {u'get_resource': u'server2_port'}}]}}}}

svc_temp_template = {u'outputs': {u'service_template_fq_name': {u'description': u'FQ name of the service template', u'value': {u'get_attr': [u'service_template', u'fq_name']}}}, u'heat_template_version': u'2013-05-23', u'description': u'HOT template to create a service template \n', u'parameters': {u'name': {u'type': u'string', u'description': u'Name of service template'}, u'service_interface_type_list': {u'type': u'string', u'description': u'List of interface types'}, u'image': {u'type': u'string', u'description': u'Name of the image'}, u'static_routes_list': {u'type': u'string', u'description': u'List of static routes enabled-disabled'}, u'mode': {u'type': u'string', u'description': u'service mode'}, u'flavor': {
    u'type': u'string', u'description': u'Flavor'}, u'type': {u'type': u'string', u'description': u'service type'}, u'shared_ip_list': {u'type': u'string', u'description': u'List of shared ip enabled-disabled'}}, u'resources': {u'service_template': {u'type': u'OS::Contrail::ServiceTemplate', u'properties': {u'name': {u'get_param': u'name'}, u'service_interface_type_list': {u'Fn::Split': [u',', {u'Ref': u'service_interface_type_list'}]}, u'image_name': {u'get_param': u'image'}, u'static_routes_list': {u'Fn::Split': [u',', {u'Ref': u'static_routes_list'}]}, u'service_mode': {u'get_param': u'mode'}, u'service_type': {u'get_param': u'type'}, u'flavor': {u'get_param': u'flavor'}, u'shared_ip_list': {u'Fn::Split': [u',', {u'Ref': u'shared_ip_list'}]}}}}}

svc_inst_template = {u'outputs': {u'num_active_service_instance_vms': {u'description': u'Number of active service VMs', u'value': {u'get_attr': [u'service_instance', u'active_service_vms']}}, u'service_instance_vms': {u'description': u'List of service VMs', u'value': {u'get_attr': [u'service_instance', u'virtual_machines']}}, u'service_instance_fq_name': {u'description': u'FQ name of the service template', u'value': {u'get_attr': [u'service_instance', u'fq_name']}}, u'service_instance_uuid': {u'description': u'UUID of the service template', u'value': {u'get_attr': [u'service_instance', u'show']}}}, u'heat_template_version': u'2013-05-23', u'description': u'HOT template to create service instance.\n', u'parameters': {u'service_template_fq_name': {u'type': u'string', u'description': u'service template name or ID'}, u'left_net_id': {
    u'type': u'string', u'description': u'ID of the left network                                                                                                                                                                                                  \n'}, u'service_instance_name': {u'type': u'string', u'description': u'service instance name'}, u'right_net_id': {u'type': u'string', u'description': u'ID of the right network         \n'}}, u'resources': {u'service_instance': {u'type': u'OS::Contrail::ServiceInstance', u'properties': {u'interface_list': [{u'virtual_network': u'auto'}, {u'virtual_network': {u'get_param': u'left_net_id'}}, {u'virtual_network': {u'get_param': u'right_net_id'}}], u'service_template': {u'get_param': u'service_template_fq_name'}, u'scale_out': {u'max_instances': 1}, u'name': {u'get_param': u'service_instance_name'}}}}}

svc_chain_template = {u'heat_template_version': u'2013-05-23', u'description': u'HOT template to create a policy between two virtual network and apply a service. Attach the network policy to two virtual networks\n', u'parameters': {u'direction': {u'type': u'string', u'description': u'Direction of Policy'}, u'dst_port_end': {u'type': u'number', u'description': u'end of the dst port'}, u'protocol': {u'type': u'string', u'description': u'Protocol'}, u'dst_port_start': {u'type': u'number', u'description': u'start of the dst port'}, u'policy_name': {u'type': u'string', u'description': u'Policy Name'}, u'dst_vn_id': {u'type': u'string', u'description': u'ID of the destination network'}, u'src_vn_id': {u'type': u'string', u'description': u'ID of the source network'}, u'apply_service': {u'type': u'string', u'description': u'service instance id'}, u'src_port_end': {u'type': u'number', u'description': u'end of the src port'}, u'src_port_start': {u'type': u'number', u'description': u'start of the src port'}}, u'resources': {u'private_policy': {
    u'type': u'OS::Contrail::NetworkPolicy', u'properties': {u'name': {u'get_param': u'policy_name'}, u'entries': {u'policy_rule': [{u'direction': {u'get_param': u'direction'}, u'protocol': {u'get_param': u'protocol'}, u'dst_addresses': [{u'virtual_network': {u'get_param': u'dst_vn_id'}}], u'action_list': {u'apply_service': [{u'get_param': u'apply_service'}]}, u'src_addresses': [{u'virtual_network': {u'get_param': u'src_vn_id'}}], u'dst_ports': [{u'end_port': {u'get_param': u'dst_port_end'}, u'start_port': {u'get_param': u'dst_port_start'}}], u'src_ports': [{u'end_port': {u'get_param': u'src_port_end'}, u'start_port': {u'get_param': u'src_port_start'}}]}]}}}, u'private_policy_attach_net1': {u'type': u'OS::Contrail::AttachPolicy', u'properties': {u'network_id': {u'get_param': u'src_vn_id'}, u'policy': {u'get_attr': [u'private_policy', u'fq_name']}}}, u'private_policy_attach_net2': {u'type': u'OS::Contrail::AttachPolicy', u'properties': {u'network_id': {u'get_param': u'dst_vn_id'}, u'policy': {u'get_attr': [u'private_policy', u'fq_name']}}}}}
