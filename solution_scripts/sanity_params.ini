[Basic]
# Orchestrator could be openstack, vcenter
orchestrator=openstack
# JSON file describing the test setup(individual hosts roles and credentials)
provFile=sanity_testbed.json

# Specify the endpoint_type that will be used for the openstack client (publicURL/internalURL)
# endpoint_type=publicURL

# Nova Keypair
key=key1

# Admin tenant credentials
stackUser=admin
stackPassword=c0ntrail123
stackTenant=admin
stackDomain=default-domain

# Keystone IP can be VIP ip if HA setup
auth_ip=172.16.80.200
auth_port=35357

# To enable multi tenancy set the below to True, default False
multiTenancy=True

# Set the default stack to test. Can be 'v4', 'v6' or 'dual'
AddressFamily=dual

# A short description about the test run. eg. "R2.0: Ubuntu havana high availability test"
logScenario=Sanity

# If you want the HTML report, set the below to 'True'. If not, the basic Unittest TextTestRunner will run the tests
generate_html_report=True

# If you dont want fixture cleanups to remove the objects which are created as part of setUp of the fixture, set fixtureCleanup to 'no'. Default value should be 'yes'. If objects are already present before start of tests, they are not deleted. To clean them up forcefully, set fixtureCleanup to 'force'
fixtureCleanup=yes


[WebServer]
# The URL to which the test log file and HTML report would be uploaded to.
# path is the local filesystem path to which the files will get copied to
# Ex: http://10.204.216.50/Docs/
host=10.204.216.50
username=bhushana
password=bhu@123

# Absolute path in the webserver where the logs and reports has to be copied
logPath=/home/bhushana/Documents/technical/logs/
reportPath=/home/bhushana/Documents/technical/sanity
webRoot=Docs/logs

[Mail]
server=10.204.216.49
port=25
# Can specify multiple comma separated receiver mailIDs
mailTo=
mailSender=contrailbuild@juniper.net


# If the test setup is behind proxy server then provide the url for the same
# eg: http://username:password@foo.bar:8080
[proxy]
proxy_url=


[ui]
# Provide webui=True to run webui verification testcases, Default = False
webui=False
# # # Provide horizon=True to run horizon verification testcases, Default = False
horizon=False
# # # Provide browser details for gui based testing, 'chrome' or 'firefox' or None
ui_browser=False
# # # if object creation has to be through gui set the config flag to 'contrail' or 'horizon' or False . default False
ui_config=False
# #

# Set the same to True if devstack env
[devstack]
devstack=False


[router]
#Route Target and ASN details
route_target=
asn=64512

#List of Router name and IP tuples 
#eg: [('mx1', '1.1.1.1'), ('mx2', '1.1.1.2')]
router_info=[('vibrant', '10.87.128.54'), ('h1droid', '10.87.128.59')]

# Floating IP pool subnet and name info
fip_pool=
fip_pool_name=floating-ip-pool
public_virtual_network=public
public_tenant_name=admin


[repos]
#contrail-test and contrail-fabric-utils repos version
test_revision=BUILDID=64
fab_revision=BUILDID=64


[HA]
# HA config
ha_setup=
ipmi_username=
ipmi_password=

[vcenter]
# VCenter configuration
vcenter_dc=

[debug]
# To pause the test execution, in pdb prompt, on failure set stop_on_fail to True, default False
stop_on_fail=False

# set to False to skip verification of VM launch, default True
verify_on_setup=True
