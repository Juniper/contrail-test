[Basic]
# Orchestrator could be openstack, vcenter
orchestrator=openstack
# JSON file describing the test setup(individual hosts roles and credentials)
provFile=sanity_testbed.json

# Specify the endpoint_type that will be used for the openstack client (publicURL/internalURL)
# endpoint_type=publicURL

# Nova Keypair
key=contrail_key

stackRegion=RegionOne
stackUser=
stackPassword=
stackTenant=
stackDomain=

# Set domain_isolation to true to Let the tests create and destroy domains
# Set tenant_isolation to true to Let the tests
# create and destroy  projects/tenants
# Setting this to true requires that admin credentials below are populated
# Admin tenant credentials
domain_isolation=False
tenant_isolation=
adminUser=admin
adminPassword=c0ntrail123
adminTenant=admin

#keystone_version
keystone_version=v2.0

# Neutron user will have member rights in the dynamically created test tenants
neutron_username=None

# Nova availability zone to use to launch VMs
availability_zone=None

# Image flavor to use for all tests
ci_flavor=None

# Set to False to make use of the stack user and skip user create per testscript
# Default: True (setting tenant_isolation to False overrides user_isolation to be False)
user_isolation=True

# Keystone IP can be VIP ip if HA setup
auth_ip=10.87.70.63
auth_port=35357
auth_protocol=http
keystone_certfile=
keystone_keyfile=
keystone_cafile=
keystone_insecure_flag=True

# To enable multi tenancy set the below to True, default False
multiTenancy=True

# Set the default stack to test. Can be 'v4', 'v6' or 'dual'
AddressFamily=dual

# A short description about the test run. eg. "R2.0: Ubuntu havana high availability test"
logScenario=Sanity

# If you dont want fixture cleanups to remove the objects which are created as part of setUp of the fixture, set fixtureCleanup to 'no'. Default value should be 'yes'. If objects are already present before start of tests, they are not deleted. To clean them up forcefully, set fixtureCleanup to 'force'
fixtureCleanup=yes

# Host IP for public network reachability tests
# Default is 10.204.216.50
public_host=

# key_filename: ssh private key file name - in case ssh key based authentication is enabled for cloud nodes
# pubkey_filename: Optional ssh public key file name, if not provided, it will try <private key filename>.pub in the
# same directory of private key.
key_filename=None
pubkey_filename=

# In case of HA, populate the below contrail service IPs if discovery service frontend is not over contrail_internal_vip
# and contrail-api and contrail-analytics-api services doesnt run on contrail_external_vip
[services]
discovery_ip=
config_api_ip=
analytics_api_ip=
config_amqp_ips=

# Populate the below if the services introspect doesnt run on default ports
# Defaults: discovery - 5998, contrail-api - 8082, contrail-analytics-api - 8081
#           contrail-control - 8083, contrail-dns - 8092, contrail-vrouter-agent - 8085
discovery_port=
config_api_port=
analytics_api_port=
control_port=
dns_port=
agent_port=
config_amqp_port=5672

[WebServer]
# The URL to which the test log file and HTML report would be uploaded to.
# path is the local filesystem path to which the files will get copied to
# Ex: http://10.204.216.50/Docs/
host=
username=
password=

# Absolute path in the webserver where the logs and reports has to be copied
logPath=/var/www/contrail-test-ci/logs/
reportPath=/var/www/contrail-test-ci/reports/
webRoot=contrail-test-ci

[Mail]
server=
port=25
# Can specify multiple comma separated receiver mailIDs
mailTo=vageesant@juniper.net
mailSender=contrailbuild@juniper.net


# If the test setup is behind proxy server then provide the url for the same
# eg: http://username:password@foo.bar:8080
[proxy]
proxy_url=

[use_devicemanager_for_md5]
use_devicemanager_for_md5=False

[ui]
# Provide webui=True to run webui verification testcases, Default = False
webui=False
# # # Provide horizon=True to run horizon verification testcases, Default = False
horizon=False
# # # Provide browser details for gui based testing, 'chrome' or 'firefox' or None
ui_browser=False
# # # if object creation has to be through gui set the config flag to 'contrail' or 'horizon' or False . default False
ui_config=False
# #

# Set the same to True if devstack env
[devstack]
devstack=False


[router]
#Route Target and ASN details
route_target=
asn=64512

#List of Router name and IP tuples
#eg: [('mx1', '1.1.1.1'), ('mx2', '1.1.1.2')]
router_info=[]

# Floating IP pool subnet and name info
fip_pool=
fip_pool_name=floating-ip-pool
public_virtual_network=public
public_tenant_name=admin


[HA]
# HA config
ha_setup=
ipmi_username=
ipmi_password=
contrail_internal_vip=10.87.70.64
contrail_external_vip=None
internal_vip=10.87.70.63
external_vip=None

[vcenter]
# VCenter configuration
vcenter_dc=
vcenter_server=None
vcenter_port=None
vcenter_username=None
vcenter_password=None
vcenter_datacenter=None
vcenter_compute=None

[cfgm]
#API protocol, certs file location
api_protocol=http
api_certfile=
api_keyfile=
api_cafile=
api_insecure_flag=True

[debug]
# To pause the test execution, in pdb prompt, on failure set stop_on_fail to True, default False
stop_on_fail=False

# set to False to skip verification of VM launch, default True
verify_on_setup=True
