Changes 10/2/13:
  (1) Added new parent "stressfactr.py" 
      - fires off flap_tests on multiple servers can use a list in 
        params or iterate over consecutive IP addresses.
      - Exammple param for list: test_servers=10.84.7.41, 10.84.7.28
      - Exammple params for iterate: 
         test_server_iterations=0
         test_server_iterations_start_server=10.84.55.1
  (2) Added consecutive cpu tests with reboot in between
      Example params:
          run_reboot_cmd=1
          reboot_cmd=shutdown -r now
          run_cpu_test=1
          cpu_mulitplier=8
          set_affinity_mask=1
  (3) Changed secondary ip adds to derive ethernet_if rather than
      hard-coded in params. 
      - Removed param: dev_on_localhost_w_secondary_ips


Changes 9/14/13:
  (1) Changed vn_api call per Ajay from "demo" to "default-project"
  (2) added option to only pront cpu stats at peak of run (param: report_cpu_only_at_peak_bgp_scale)
  (3) fixed loop exit for peer up timing when times > 10min
  (4) added avv time per updates
  (5) added sshpass install to init
  (6) changed reporting stats to usec (from sec) in some cases
  (7) fixed math on averages to use wallclock rather than agg time

Changes 9/10/13:
  (1) added linux distribution support (fedora, centos)
  (2) cleaned up residual, erroneous, and un-used hard-coded paths
  (3) enhanced/fixed trigger file support
  (4) fixed timing bug on updates/sec

Changes 8/27/13:
  (1) added changes to account for supervisord modifications
  (2) fixed logdir bug
  (3) added trigger file support for bgp_stress_test knob  --routes-send-trigger=<filename>
  (4) added bgp_strss knobs: --nevents=-1 --pause 
  (5) re-worked some timings to make them more accurate

Changes 8/22/13:
  (1) fixed multiple logdir bugs
  (2) refined accuracy of prefix add time delta computation
  (3) added results summary directives for parallel vs sequesntial iterations

Changes 8/18/13:
  (1) added more stats to summary file
  (2) added logdir knob, defaults to "/root/bgp/log"

Changes 8/17/13:
  (1) added a few adjustments to adding secondaries for standalone mode
  (2) added --nvms=0 knob to bgp_stress_test call

Changes 8/16/13:
  (1) added introspect poll vals: paths, primary_paths, secondary_paths and infeasible_paths
  (2) changed poll val name from active_paths to prefixes
  (3) added extra check lingering processes in cleanup (covers the case if parents crashed etc)
  (4) cleaned up some sys call error chks


Changes 8/13/13:

  (1) added post-processing summary
      - logged in main log as well as new "results_summary" file
      - summary filename speficified with param: result_averages_logfilename=<summary_name>_pid.txt
  (2) added post-processing summary on pre-existing logs: 
      - set param run_get_result_prior_run=<old_PID>
  (3) added introspect polling for markers
  (4) added introspect polling for xmpp state when pending_updates > 0, and 60s passed (adds only)
  (5) added bgp_stress_test knob "--no-sandesh-server" to logging_etc param

Changes 8/11/13:

  (0) moved timer start to include entire test, not just after processes start
  (1) added contrail-version info to _report_stats
  (2) added flag to report_stats once before and after script run (report_stats_before_and_after_tests)
  (3) added param flag to skip pings for adding secondaries (skip_check_and_fix_connectivity_ping)
  (4) added knob to to a yum pkg add (install_w_yum) including fstat update to mount cs-shared

Changes from 8/8/13:

  (0) fixed peer polling bug
  (1) added param to pass bgp_scal for bgp_stress logging
  (2) added param to pass bgp_scal for bgp_stress logging
      logging_etc Ex:
      logging_etc=--no-agents-messages-processing --no-agents-updates-processing --log-level=SYS_EMERG --log-local --no-verify-routes
  (3) reduced logging for pings etc
  (4) general cleanup
  (5) added cn restart after deleting vns (polling 100s times seems too slow at this scale..)

Changes from 8/7/13:

  (0) added ability to skip polling routes on the router:
      - new param: skip_rtr_check=[1|0] defaults to 0

  (1) added ability to skip verifying any routes
      - new param: no_verify_routes=[1|0] defaults to 0

  (2) added env variables to params file for call to bgp_stress:
      - new param: bgp_env=[comma delimeted string of env vars]
                   Ex: bgp_env=XMPP_KEEPALIVE_SECONDS=300000  XMPP_ASSERT_ON_HOLD_TIMEOUT=1

  (3) added setup call to optionally run pre-test items
      - new param (required): run_setup=[1|0]
      - setup includes the following (all may be enabled or disabed): 
            add secondaries        existing param: skip_check_and_fix_connectivity=[1|0]
            create vns             existing param: run_vn=[1|0]
            create policy          existing param: run_policy=[1|0]
            add cn env vars        new param: add_cn_env_vars=[1|0]
                                   new param: cn_env=[comma delimeted string of env vars]
                                              Ex: cn_env=#LOG_LOCAL=, #CONCURRENCY_CHECK_DISABLE=1, XMPP_KEEPALIVE_SECONDS=300000
            restart control_node   new param: restart_cn=[1|0]

  (4) changed router login from "regress" to "root" in order preclude maxprocess limit (params change)






   +----------------+           +----------------+     +-------------+
   | a2s40          |           | a2s42 DUT      |     | mx80        |
   | api-server     |           | control-node   |     |             |
   | control-node   |           |                |     |             |
   +----------------+           +----------------+     +-------------+
           |.40                         |.42                  | .250
           |                            |                     |
           |                            |                     |
     ---------------------------------------------------------------
       |                    |                    10.84.7/24 lan
       |                    |
       |.41                 |.39
      a2s41               a2s39       
      test-server         test-server


Steps:

 1) reimage machines a2s39, a2s40, a2s41, a2s42

 2) use build03:/home/nitzan/my_scripts/bgp/v17/testbed.py to run "fab setup_all"
    - roles:
      a2s40 as the cfg/analytics/other-services
      a2s42 as the control node (dut)

    - cp files to test-server:
      scp from build03:/home/nitzan/my_scripts/bgp/v17/v17.tar
      tar xvf v17.tar

    - run fab on api-server 10.84.7.40: 
      scp from build03:/home/nitzan/my_scripts/bgp/v17/testbed.py to /opt/contrail/utils/fabfile/testbeds/.
      adjust as needed
      cd /opt/contrail/utils
      fab setup_all

    - Add bgp configs to api-server (10.84.7.40) towards MX:
      cd /opt/contrail/utils
      python provision_control.py --api_server_ip 10.84.7.40 --api_server_port 8082 --host_name a2s40  --host_ip 10.84.7.40 --router_asn 64512 --oper add
      python provision_mx.py --router_name rtr-mx80-1 --router_ip 10.84.7.250 --router_asn 64512 --api_server_ip 10.84.7.40 --api_server_port 8082 --oper add


    - Add bgp configs to DUT (10.84.7.42) towards MX:
      cd /opt/contrail/utils
      python provision_control.py --api_server_ip 10.84.7.40 --api_server_port 8082 --host_name a2s42  --host_ip 10.84.7.42 --router_asn 64512 --oper add
      python provision_mx.py --router_name rtr-mx80-1 --router_ip 10.84.7.250 --router_asn 64512 --api_server_ip 10.84.7.40 --api_server_port 8082 --oper add


 3) node a2s41 is the test-server that runs bgp_stress (can also use a2s39)

 4) Once untarred, run script from dir: /root/my_scripts/bgp/v17
    - cd /root/my_scripts/bgp/v17
    - copy over bgp_stress_test (script will abort if its not there)
      - cd /root/my_scripts/bgp/v17; cp /cs-shared/ananth/test/tools/current/bgp_stress_test .

 5) Create VNs:
    - set scripts env variable:
    export PYTHONPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin:/root/test/fixtures/:/root/test/scripts/::/root/test/sanity:/opt/contrail/utils

    - to create 100 VNs note that the number of vns created will be derived from params files as:
    nblocks_of_vns * num_iterations * max_val_of (ninstances over niterations)

    - edit params.ini to run VN_scale, but not policy or bgp_stress
      run_policy=0
      run_vn=1
      run_bgp_scale=0

    - set the following to get 10x10=100 instances
      nblocks_of_vns=1
      num_iterations=10
      ninstances=1,10,10,10,10,10,10,10,10,10

    - the resulting names e.g., using cn: 10.84.7.42 and test-server: 10.84.7.39 are:
      c42_t41_block1_n1, c42_t41_block1_n2, ... c42_t41_block1_n10
      c42_t41_block2_n1, c42_t41_block2_n2, ... c42_t41_block2_n10
      ...
      c42_t41_block10_n1, c42_t41_block10_n2, ... c42_t41_block10_n10

   
    - run script where .py files are (if you intarred them, then here: /root/my_scripts/bgp/v17)
      python flap_agent_scale_test.py -c params.ini 

  Notes:
  0) cp bgp_stress_test to dir where you are running script: cp /cs-shared/ananth/test/tools/current/bgp_stress_test .
  1) if you want to run the bgp_stress iterations in parallel, set this param:
      run_bgp_scale_in_background=1
  2) if you re-imaged, ssh needs well-known hosts updated first, ssh to the api-server/cn to update it
     You could get this error: quantumclient.common.exceptions.Unauthorized: [Errno 111] Connection refused
  3) the instance names, xmpp_server addresses, and xmpp_prefixes  are derived per test-server to
     avoid overlap
  4) logs are in <curr_dir>/log

